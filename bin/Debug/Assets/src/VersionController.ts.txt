/*
* name;
*/

class VersionController {
    static me: VersionController;
    static currentVersion: number = 5;//此代码版本
    static ShareToRevive: number = 0;//失败时显示强制分享群的概率
    static AdsToRevive: number = 0;//失败时显示看广告复活的概率
    static ShareCDHour:number = 0;//群分享的冷却时间
    static LinkAppId:string = "";
    static FreeReviveTimes:number = 2;

    private _isReviewNow: boolean = true;
    private _isVideoSupport: boolean = false;
    private _isForceGroup: boolean = true;
    private _isAlwayBanner:boolean = true;
    constructor() {
        VersionController.me = this;
        this.detectReview();
    }

    //检测当前是否正在审核
    public detectReview() {
        HttpController.me.simplePost(HttpController.baseURL + HttpController.getConfigURL, {"GameName":UserInfoController.gameName}, function (data) {
            // debugger
            VersionController.ShareToRevive = data.ShareToRevive;
            VersionController.AdsToRevive = data.AdsToRevive;
            VersionController.me._isVideoSupport = data.SupportVideo;
            VersionController.me._isForceGroup = data.ForceGroup;//是否强制分享群
            VersionController.ShareCDHour = data.ShareCDHour;//冷却时间（群分享）

            AdController.bannAdId = data.BannAdId;//横屏广告
            AdController.videoAdId = data.VideoAdId;//视频广告
            VersionController.me._isAlwayBanner = data.AlwayBanner;//是否在游戏时显示广告
            VersionController.LinkAppId = data.LinkAppId;//要跳转的公众号id（如果id不存在，后面就不会出现那个跳转图片）
            VersionController.FreeReviveTimes = data.FreeReviveTimes;//允许免费复活的次数
            if (VersionController.currentVersion != data.ReviewVersion) {
                VersionController.me._isReviewNow = false;
            } else {
                VersionController.me._isReviewNow = true;
            }
        });
    }

    //返回当前的状态是否正在review的版本
    public get IS_REVIEW(): boolean {
        return this._isReviewNow;
    }

    //返回当前是否已经开通了视频广告
    public get IS_VIDEO_SUPPORT(): boolean {
        return this._isVideoSupport;
    }

    //返回当前是否要强制分享到不同的群
    public get IS_FORCE_GROUP():boolean{
        return this._isForceGroup;
    }

    //返回是否在游戏时也显示banner广告
    public get IS_ALWAY_BANNER():boolean{
        return this._isAlwayBanner;
    }
}